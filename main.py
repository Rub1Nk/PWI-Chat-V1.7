# –∏–º–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
from config import verify, sp, maxnick, maxmsg, portt, systemnickname, heading, ownernick, ownernick2, ownernick3, ownernick4, ban_list, version, update_info, update_date, help_info_adm, help_info, fr_ch, user_list
from admin import anickpass, onickpass

# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
import time
import os
import datetime
from colorama import Fore, Style

# —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
log_dir = "logs"
if not os.path.exists(log_dir):
    os.makedirs(log_dir)

# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
log_filename = f"ChatHistory_{datetime.datetime.now().strftime('%Y.%m.%d_%H-%M-%S')}.txt"
log_path = os.path.join(log_dir, log_filename)
def log_print(*args, **kwargs):
    with open(log_path, "a") as f:
        print(*args, **kwargs, file=f)
    print(*args, **kwargs)

os.system('cls||clear')

# –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
log_print('‚Ä¢ [&] Chat:', Fore.GREEN + 'Online', Style.RESET_ALL)
dt_now = str(datetime.datetime.now())
log_print(f'\n[&] –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –ø–æ —Å–µ—Ä–≤–µ—Ä—É:\n{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}\n')
log_print(f'[&] Owner Password - {onickpass}\n[&] Admin Password - {anickpass}')
log_print('\nLogs:\n')

# –∞–Ω—Ç–∏-–∫—Ä–∞—à —Å–∏—Å—Ç–µ–º–∞
def main():
  try:
      pass
  except Exception as e:
      log_print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
      print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
      os.execv(sys.executable, ['python'] + sys.argv)

# –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤—ã
import asyncio

from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import defer_call, info as session_info, run_async, run_js

# –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
chat_msgs = []
online_users = set()

MAX_MESSAGES_COUNT = 250

current_datetime = datetime.datetime.now()

# –±–ª–æ–∫ —Å —á–∞—Ç–æ–º –∏ –ø–∞–Ω–µ–ª—å—é
async def main():
    global chat_msgs
  
    put_markdown(heading)

    msg_box = output()
    put_scrollable(msg_box, height=300, keep_bottom=True)

    # –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    msg_box.append(put_markdown(f'`{systemnickname}` –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —á–∞—Ç—É - –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º!'))

    # –∑–∞–ø—Ä–æ—Å –Ω–∏–∫–Ω–µ–π–º–∞
    online_users.add(ownernick)
    online_users.add(ownernick2)
    online_users.add(ownernick3)
    online_users.add(ownernick4)
    
    nickname = await input('üåê –í—Ö–æ–¥',required=True, placeholder=f'–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∏–∫ (–º–∞–∫—Å.—Å–∏–º–≤: {maxnick})', validate=lambda n: '–≠—Ç–æ—Ç –Ω–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç!' if n in online_users or n == 'üì¢' else None)
  
    # –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É
    if nickname in ban_list:
      dt_now = str(datetime.datetime.now())
      if nickname == nickname:
        toast('–î–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!')
        run_js('window.location.reload()')
        log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [!] –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} –ø—ã—Ç–∞–ª—Å—è –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—Å—è –∫ —á–∞—Ç—É')
      
    elif nickname == anickpass:
        nickname = await input('üëî –ù–∏–∫–Ω–µ–π–º –¥–ª—è –∞–¥–º–∏–Ω –∞–∫–∫–∞—É–Ω—Ç–∞',required=True, placeholder='–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∏–∫–Ω–µ–π–º')
        nickname = nickname + verify
        online_users.add(nickname)
        user_list.append(nickname)
        toast('–í—ã –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')
        chat_msgs.append(('`üëî –ê–¥–º–∏–Ω`', f' `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
        msg_box.append(put_markdown(f'`üëî –ê–¥–º–∏–Ω` `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
        msg_box.append(put_markdown('‚Ä¢ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ–º–æ—â–∏ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/help`\n‚Ä¢ –¢–∞–∫ –∂–µ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É `/rules`'))
        
        dt_now = str(datetime.datetime.now())
        log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [!] –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –∞–∫–∫–∞—É–Ω—Ç', nickname)
  
    # –≤—Ö–æ–¥ –≤ —Å–æ–∑–¥–∞—Ç–µ–ª—è
    elif nickname == onickpass:
        nickname = await input('üëë –ù–∏–∫–Ω–µ–π–º –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è:',required=True, placeholder='–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∏–∫–Ω–µ–π–º')
        nickname = nickname + verify
        online_users.add(nickname)
        user_list.append(nickname)
        toast('–í—ã –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è!')
        chat_msgs.append(('`üëë –°–æ–∑–¥–∞—Ç–µ–ª—å`', f' `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
        msg_box.append(put_markdown(f'`üëë –°–æ–∑–¥–∞—Ç–µ–ª—å` `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
        msg_box.append(put_markdown('‚Ä¢ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ–º–æ—â–∏ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/help`\n‚Ä¢ –¢–∞–∫ –∂–µ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É `/rules`'))

        dt_now = str(datetime.datetime.now())
        log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [!] –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è', nickname)
      
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–∞
    else:
        dt_now = str(datetime.datetime.now())
        if '  ' in nickname:
            print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ù–µ–¥–æ–ø—É—Å–∫! –ù–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç 2 –ø—Ä–æ–±–µ–ª–∞! (Nick: {nickname})')
            run_js('window.location.reload()')
        elif nickname == ' ':
            print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ù–µ–¥–æ–ø—É—Å–∫! –ù–∏–∫ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø—Ä–æ–±–µ–ª–∞!')
            run_js('window.location.reload()')
        elif ' ' in nickname:
            print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ù–µ–¥–æ–ø—É—Å–∫! –ù–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π —Å–∏–º–≤–æ–ª! (Nick: {nickname})')
            run_js('window.location.reload()')
        elif 'RubiNk' in nickname:
            print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ù–µ–¥–æ–ø—É—Å–∫! –ù–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π —Å–∏–º–≤–æ–ª! (Nick: {nickname})')
            run_js('window.location.reload()')
        elif '‚úì' in nickname:
            print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ù–µ–¥–æ–ø—É—Å–∫! –ù–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –≥–∞–ª–æ—á–∫—É! (Nick: {nickname})')
            run_js('window.location.reload()')
        else:
            # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —á–∞—Ç—É
            nickname = nickname[:maxnick]
            online_users.add(nickname)
            user_list.append(nickname)
            chat_msgs.append(('üì¢', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
            msg_box.append(put_markdown(f'üì¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
            msg_box.append(put_markdown('‚Ä¢ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ–º–æ—â–∏ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/help`\n‚Ä¢ –¢–∞–∫ –∂–µ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É `/rules`'))
           
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [' + Fore.GREEN + '‚Ä¢' + Style.RESET_ALL + ']', nickname, '- Connected')
            
    refresh_task = run_async(refresh_msg(nickname, msg_box))

    # –±–ª–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    while True:
        data = await input_group('üí≠ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', [
            input(placeholder=f'–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è... (–º–∞–∫—Å.—Å–∏–º–≤: {maxmsg})', name='msg', autocomplete="off", required=False),
            actions(name='cmd', buttons=['üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', {'label': 'üö™ –í—ã–π—Ç–∏', 'type': 'cancel'}])
        ], validate=lambda m: ('msg', '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!') if m['cmd'] == 'üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ' and not m["msg"] else None)

      
        if data is None:
            break

        # –∫–æ–º–∞–Ω–¥—ã
        elif nickname in ban_list:
          dt_now = str(datetime.datetime.now())
          toast('–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!')
          run_js('window.location.reload()')

        elif data['msg'] == '/help':
          dt_now = str(datetime.datetime.now())
          log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [/]', nickname, '–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /help')
          if verify in nickname:
            msg_box.append(put_markdown(f'\n{help_info_adm}'))
          else:
            msg_box.append(put_markdown(f'\n{help_info}'))

        elif data['msg'] == '/rules':
          dt_now = str(datetime.datetime.now())
          log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [/]', nickname, '–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /rules')
          msg_box.append(put_markdown(f'\n`üìï –ü—Ä–∞–≤–∏–ª–∞`:\n`1.` –ù–µ—Ç —Å–ø–∞–º—É / —Ñ–ª—É–¥—É\n`2.` –ù–µ—Ç —Ä–µ–∫–ª–∞–º–µ / —Å–∞–º–æ–ø–∏–∞—Ä—É\n`3.` –ù–µ—Ç –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è–º / —Å—Ä–∞—á–∞–º\n\n‚Äì –í –ø—Ä–æ—á–µ–º –ø—Ä–∞–≤–∏–ª –±–æ–ª—å—à–µ –Ω–µ—Ç—É. –ì–ª–∞–≤–Ω–æ–µ –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞–π—Ç–µ —á–µ—Ä—Ç—É –∏ –≤–µ–¥–∏—Ç–µ —Å–µ–±—è –∞–¥–µ–∫–≤–∞—Ç–Ω–æ.`\n'))

        elif data['msg'] == '/updates':
          log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [/]', nickname, '–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /updates')
          dt_now = str(datetime.datetime.now())
          msg_box.append(put_markdown(f'\nüì∞ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: `{version}`\n{update_info}\n–û–±–Ω–æ–≤–ª–µ–Ω–æ: `{update_date}`'))
                                 
        elif data['msg'] == '/time':
          log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [/]', nickname, '–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /time')
          dt_now = str(datetime.datetime.now())
          msg_box.append(put_markdown(f'\n‚åö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞:\n`~ {dt_now[:10]}\n‚Ä¢ {dt_now[:19][11:]}`'))

        elif data['msg'] == '/ban':
          dt_now = str(datetime.datetime.now())
          if verify in nickname:
            ban_user = await input('–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–µ—Å—Ç–∏ –≤ –ß–°',required=True, placeholder='–ù–∏–∫')
            if ban_user in user_list:
              ban_list.append(ban_user)
              online_users.remove(ban_user)
              user_list.remove(ban_user)
              chat_msgs.append(('üö´', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{ban_user}` –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!'))
              toast(f'{ban_user} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ß–°!')
              log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [&]', nickname, '–∑–∞–±–∞–Ω–∏–ª', ban_user)
            else:
              toast('–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –æ–Ω–ª–∞–π–Ω!')
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /ban')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')

        elif data['msg'] == '/unban':
          dt_now = str(datetime.datetime.now())
          if verify in nickname:  
            unban_user = await input('–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–±—Ä–∞—Ç—å –∏–∑ –ß–°',required=True, placeholder='–ù–∏–∫')
            if unban_user in ban_list:
              ban_list.remove(unban_user)
              chat_msgs.append(('‚úÖ', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{unban_user}` –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω!'))
              toast(f'{unban_user} –±—ã–ª —É–±—Ä–∞–Ω –∏–∑ –ß–°!')
              log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [&]', nickname, '—Ä–∞–∑–±–∞–Ω–∏–ª', unban_user)
            else:
              toast('–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤ –±–∞–Ω-—Å–ø–∏—Å–∫–µ!')
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /unban')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')

        elif data['msg'] == '/kick':
          dt_now = str(datetime.datetime.now())
          if verify in nickname:
            kick_user = await input('–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–±—Ä–∞—Ç—å –∏–∑ –æ–Ω–ª–∞–π–Ω–∞',required=True, placeholder='–ù–∏–∫')
            if kick_user in user_list:
              online_users.remove(kick_user)
              user_list.remove(kick_user)
              toast(f'{kick_user} –±—ã–ª –∫–∏–∫–Ω—É—Ç!')
              log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [&]', nickname, '–∫–∏–∫–Ω—É–ª', kick_user)
            else:
              toast('–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –æ–Ω–ª–∞–π–Ω!')
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /ban')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')

        elif data['msg'] == '/list':
          dt_now = str(datetime.datetime.now())
          if verify in nickname:
            user_counts = len(user_list)
            msg_box.append(put_markdown(f'\nüåê –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω: `{user_counts}`'))
            msg_box.append(put_markdown('\n'.join(map(str, user_list))))
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [&]', nickname, '–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /list')
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /list')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
      
        elif data['msg'] == '/ban_list':
          dt_now = str(datetime.datetime.now())
          if verify in nickname:
            ban_counts = len(ban_list)
            msg_box.append(put_markdown(f'\nüö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: `{ban_counts}`'))
            msg_box.append(put_markdown('\n'.join(map(str, ban_list))))
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [&]', nickname, '–≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /ban_list')
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /ban_users')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
      
        elif '/toast ' in data['msg']:
          if verify in nickname:
            tmsg = data['msg'].replace('/toast ', '')
            toast(tmsg)
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [Toast]', nickname + ': ' + tmsg)
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /toast')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
            
        elif data['msg'] == '/fmsg':
          dt_now = str(datetime.datetime.now())
          if verify in nickname:
            fknick = await input('–ù–∏–∫',required=True, placeholder='–ù–∏–∫')
            fkmsg = await input('–°–æ–æ–±—â–µ–Ω–∏–µ', placeholder='–¢–µ–∫—Å—Ç')
            chat_msgs.append((fknick, fkmsg))
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [' + nickname + ']', '[Fake]', fknick + ': ' + fkmsg)
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /fmsg')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
            
        elif data['msg'] == '/fcdmsg':
          if verify in nickname:
            fkcdnick = await input('–ù–∏–∫',required=True, placeholder='–ù–∏–∫')
            cdq = await input('–û—Ç–≤–µ—Ç:',required=True, placeholder='c - –ø–æ–¥–∫–ª | d - –æ—Ç–∫–ª')
            if cdq == 'c':
              chat_msgs.append(('üì¢', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{nickname}` –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!'))
              dt_now = str(datetime.datetime.now())
              log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [Fake]', nickname, '[' + Fore.GREEN + '‚Ä¢' + Style.RESET_ALL + ']', fkcdnick, '- Connected')
            elif cdq == 'd':
              chat_msgs.append(('üîå', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{fkcdnick}` –æ—Ç–∫–ª—é—á–∏–ª—Å—è!'))
              dt_now = str(datetime.datetime.now())
              log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [Fake]', nickname, '[' + Fore.RED + '‚Ä¢' + Style.RESET_ALL + ']', fkcdnick, '- Disconnected')
          else:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [√ó]', nickname, '–ø—ã—Ç–∞–ª—Å—è –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /fcdmsg')
            toast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        elif data['msg'] == ' ':
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', nickname, '–Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–±–µ–ª–æ–º)')
        elif '  ' in data['msg']:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', nickname, '–Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Å–æ–¥–µ—Ä–∂–∏—Ç 2 –ø—Ä–æ–±–µ–ª–∞)')
        elif '  ' in data['msg']:
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [~] –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', nickname, '–Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π —Å–∏–º–≤–æ–ª)')
        else:
            msg_box.append(put_markdown(f'`{nickname}`: {data["msg"][:maxmsg]}'))
            chat_msgs.append((nickname, data['msg'][:maxmsg]))
            dt_now = str(datetime.datetime.now())
            log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}]', nickname + ': ' + data['msg'][:maxmsg])
  
    refresh_task.close()

    # –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —á–∞—Ç–∞
    online_users.remove(nickname)
    user_list.remove(nickname)
    toast('–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –∏–∑ —á–∞—Ç–∞!')
    msg_box.append(put_markdown(f'üîå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{nickname}` –æ—Ç–∫–ª—é—á–∏–ª—Å—è!'))
    chat_msgs.append(('üîå', f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{nickname}` –æ—Ç–∫–ª—é—á–∏–ª—Å—è!'))
    dt_now = str(datetime.datetime.now())
    log_print(f'[{dt_now[:10]} ‚Ä¢ {dt_now[:19][11:]}] [' + Fore.RED + '‚Ä¢' + Style.RESET_ALL + ']', nickname, '- Disconnected')

    put_buttons(['üîÅ –ü–µ—Ä–µ–∑–∞–π—Ç–∏'], onclick=lambda btn:run_js('window.location.reload()'))

# –ø—Ä–æ—á–µ–µ
async def refresh_msg(nickname, msg_box):
    global chat_msgs
    last_idx = len(chat_msgs)

    while True:
        await asyncio.sleep(1)
        
        for m in chat_msgs[last_idx:]:
            if m[0] != nickname:
                msg_box.append(put_markdown(f'`{m[0]}`: {m[1]}'))
        
        if len(chat_msgs) > MAX_MESSAGES_COUNT:
            chat_msgs = chat_msgs[len(chat_msgs) // 2:]
        
        last_idx = len(chat_msgs)

if __name__ == '__main__':
    start_server(main, debug=True, port=portt, cdn=False)
    main()